-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

-- Extension: pg_hashids

-- DROP EXTENSION pg_hashids;

CREATE EXTENSION IF NOT EXISTS pg_hashids
    SCHEMA extensions
    VERSION "1.3";

CREATE TABLE IF NOT EXISTS public.invites
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    token text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    CONSTRAINT invites_pkey PRIMARY KEY (id),
    CONSTRAINT invites_token_key UNIQUE (token)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.invites
    OWNER to postgres;

GRANT ALL ON TABLE public.invites TO anon;

GRANT ALL ON TABLE public.invites TO authenticated;

GRANT ALL ON TABLE public.invites TO postgres;

GRANT ALL ON TABLE public.invites TO service_role;

CREATE TABLE IF NOT EXISTS public.wait_list_entries
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    email text COLLATE pg_catalog."default" NOT NULL,
    invite_id bigint,
    stripe_account_id text COLLATE pg_catalog."default",
    CONSTRAINT wait_list_entries_pkey PRIMARY KEY (id),
    CONSTRAINT wait_list_entries_email_key UNIQUE (email),
    CONSTRAINT wait_list_entries_invite_id_fkey FOREIGN KEY (invite_id)
        REFERENCES public.invites (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT wait_list_entries_stripe_account_id_fkey FOREIGN KEY (stripe_account_id)
        REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.wait_list_entries
    OWNER to postgres;

GRANT ALL ON TABLE public.wait_list_entries TO anon;

GRANT ALL ON TABLE public.wait_list_entries TO authenticated;

GRANT ALL ON TABLE public.wait_list_entries TO postgres;

GRANT ALL ON TABLE public.wait_list_entries TO service_role;

ALTER TABLE IF EXISTS public.stripe_accounts
    ADD COLUMN invite_id bigint;
ALTER TABLE IF EXISTS public.stripe_accounts
    ADD CONSTRAINT stripe_accounts_invite_id_fkey FOREIGN KEY (invite_id)
    REFERENCES public.invites (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

REVOKE ALL ON TABLE public.features FROM authenticated;
REVOKE ALL ON TABLE public.features FROM postgres;
REVOKE ALL ON TABLE public.features FROM service_role;
GRANT ALL ON TABLE public.features TO authenticated;

GRANT ALL ON TABLE public.features TO service_role;

GRANT ALL ON TABLE public.features TO postgres;

ALTER TABLE IF EXISTS public.tokens DROP COLUMN IF EXISTS stripe_account_id;
ALTER TABLE IF EXISTS public.tokens DROP CONSTRAINT IF EXISTS tokens_stripe_account_id_fkey;
