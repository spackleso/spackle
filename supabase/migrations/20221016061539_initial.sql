-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.
CREATE TABLE IF NOT EXISTS public.stripe_accounts (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    CONSTRAINT stripe_accounts_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_accounts_stripe_id_key UNIQUE (stripe_id)
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.features (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    name text COLLATE pg_catalog."default" NOT NULL,
    key text COLLATE pg_catalog."default" NOT NULL,
    type smallint NOT NULL DEFAULT '0' :: smallint,
    value_limit numeric,
    value_flag boolean,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT features_pkey PRIMARY KEY (id),
    CONSTRAINT features_stripe_account_id_key_key UNIQUE (stripe_account_id, key),
    CONSTRAINT features_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.stripe_customers (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    CONSTRAINT stripe_customers_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_customers_stripe_id_key UNIQUE (stripe_id),
    CONSTRAINT stripe_customers_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.customer_features (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    value_limit numeric,
    value_flag boolean,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_customer_id text COLLATE pg_catalog."default" NOT NULL,
    feature_id bigint NOT NULL,
    CONSTRAINT customer_features_pkey PRIMARY KEY (id),
    CONSTRAINT customer_features_stripe_account_id_stripe_customer_id_feat_key UNIQUE (
        stripe_account_id,
        stripe_customer_id,
        feature_id
    ),
    CONSTRAINT customer_features_feature_id_fkey FOREIGN KEY (feature_id) REFERENCES public.features (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT customer_features_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT customer_features_stripe_customer_id_fkey FOREIGN KEY (stripe_customer_id) REFERENCES public.stripe_customers (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.stripe_products (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    CONSTRAINT stripe_products_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_products_stripe_id_key UNIQUE (stripe_id),
    CONSTRAINT stripe_products_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.stripe_prices (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_product_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    CONSTRAINT stripe_prices_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_prices_stripe_id_key UNIQUE (stripe_id),
    CONSTRAINT stripe_prices_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT stripe_prices_stripe_product_id_fkey FOREIGN KEY (stripe_product_id) REFERENCES public.stripe_products (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.price_features (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    value_limit numeric,
    value_flag boolean,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_price_id text COLLATE pg_catalog."default" NOT NULL,
    feature_id bigint NOT NULL,
    CONSTRAINT price_features_pkey PRIMARY KEY (id),
    CONSTRAINT price_features_stripe_account_id_stripe_price_id_feature_id_key UNIQUE (stripe_account_id, stripe_price_id, feature_id),
    CONSTRAINT price_features_feature_id_fkey FOREIGN KEY (feature_id) REFERENCES public.features (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT price_features_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT price_features_stripe_price_id_fkey FOREIGN KEY (stripe_price_id) REFERENCES public.stripe_prices (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.stripe_subscriptions (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    status text COLLATE pg_catalog."default" NOT NULL,
    stripe_customer_id text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT stripe_subscriptions_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_subscriptions_stripe_id_key UNIQUE (stripe_id),
    CONSTRAINT stripe_subscriptions_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT stripe_subscriptions_stripe_customer_id_fkey FOREIGN KEY (stripe_customer_id) REFERENCES public.stripe_customers (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.stripe_subscription_items (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    stripe_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_json json,
    stripe_price_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_subscription_id text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT stripe_subscription_items_pkey PRIMARY KEY (id),
    CONSTRAINT stripe_subscription_items_stripe_id_key UNIQUE (stripe_id),
    CONSTRAINT stripe_subscription_items_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT stripe_subscription_items_stripe_price_id_fkey FOREIGN KEY (stripe_price_id) REFERENCES public.stripe_prices (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT stripe_subscription_items_stripe_subscription_id_fkey FOREIGN KEY (stripe_subscription_id) REFERENCES public.stripe_subscriptions (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.product_features (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    created_at timestamp with time zone DEFAULT now(),
    value_limit numeric,
    value_flag boolean,
    stripe_account_id text COLLATE pg_catalog."default" NOT NULL,
    stripe_product_id text COLLATE pg_catalog."default" NOT NULL,
    feature_id bigint NOT NULL,
    CONSTRAINT product_features_pkey PRIMARY KEY (id),
    CONSTRAINT product_features_stripe_account_id_stripe_product_id_featur_key UNIQUE (stripe_account_id, stripe_product_id, feature_id),
    CONSTRAINT product_features_feature_id_fkey FOREIGN KEY (feature_id) REFERENCES public.features (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT product_features_stripe_account_id_fkey FOREIGN KEY (stripe_account_id) REFERENCES public.stripe_accounts (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT product_features_stripe_product_id_fkey FOREIGN KEY (stripe_product_id) REFERENCES public.stripe_products (stripe_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
) TABLESPACE pg_default;

ALTER TABLE
    IF EXISTS public.customer_features OWNER to postgres;

GRANT ALL ON TABLE public.customer_features TO anon;

GRANT ALL ON TABLE public.customer_features TO authenticated;

GRANT ALL ON TABLE public.customer_features TO postgres;

GRANT ALL ON TABLE public.customer_features TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_products OWNER to postgres;

GRANT ALL ON TABLE public.stripe_products TO anon;

GRANT ALL ON TABLE public.stripe_products TO authenticated;

GRANT ALL ON TABLE public.stripe_products TO postgres;

GRANT ALL ON TABLE public.stripe_products TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_accounts OWNER to postgres;

GRANT ALL ON TABLE public.stripe_accounts TO anon;

GRANT ALL ON TABLE public.stripe_accounts TO authenticated;

GRANT ALL ON TABLE public.stripe_accounts TO postgres;

GRANT ALL ON TABLE public.stripe_accounts TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_prices OWNER to postgres;

GRANT ALL ON TABLE public.stripe_prices TO anon;

GRANT ALL ON TABLE public.stripe_prices TO authenticated;

GRANT ALL ON TABLE public.stripe_prices TO postgres;

GRANT ALL ON TABLE public.stripe_prices TO service_role;

ALTER TABLE
    IF EXISTS public.price_features OWNER to postgres;

GRANT ALL ON TABLE public.price_features TO anon;

GRANT ALL ON TABLE public.price_features TO authenticated;

GRANT ALL ON TABLE public.price_features TO postgres;

GRANT ALL ON TABLE public.price_features TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_customers OWNER to postgres;

GRANT ALL ON TABLE public.stripe_customers TO anon;

GRANT ALL ON TABLE public.stripe_customers TO authenticated;

GRANT ALL ON TABLE public.stripe_customers TO postgres;

GRANT ALL ON TABLE public.stripe_customers TO service_role;

ALTER TABLE
    IF EXISTS public.features OWNER to postgres;

GRANT ALL ON TABLE public.features TO anon;

GRANT ALL ON TABLE public.features TO authenticated;

GRANT ALL ON TABLE public.features TO postgres;

GRANT ALL ON TABLE public.features TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_subscription_items OWNER to postgres;

GRANT ALL ON TABLE public.stripe_subscription_items TO anon;

GRANT ALL ON TABLE public.stripe_subscription_items TO authenticated;

GRANT ALL ON TABLE public.stripe_subscription_items TO postgres;

GRANT ALL ON TABLE public.stripe_subscription_items TO service_role;

ALTER TABLE
    IF EXISTS public.product_features OWNER to postgres;

GRANT ALL ON TABLE public.product_features TO anon;

GRANT ALL ON TABLE public.product_features TO authenticated;

GRANT ALL ON TABLE public.product_features TO postgres;

GRANT ALL ON TABLE public.product_features TO service_role;

ALTER TABLE
    IF EXISTS public.stripe_subscriptions OWNER to postgres;

GRANT ALL ON TABLE public.stripe_subscriptions TO anon;

GRANT ALL ON TABLE public.stripe_subscriptions TO authenticated;

GRANT ALL ON TABLE public.stripe_subscriptions TO postgres;

GRANT ALL ON TABLE public.stripe_subscriptions TO service_role;