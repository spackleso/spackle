name: Test & Deploy

on:
  push:
    branches:
      - "main"

concurrency: "only one deploy at a time"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        uses: ./.github/actions/test
    env:
      AWS_REGION: us-west-2
      BETTERSTACK_LOGS_TOKEN: super-secret-token
      DATABASE_URL: postgresql://postgres:postgres@localhost:54322/postgres
      REDIS_URL: redis://localhost:6379
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      SUPABASE_URL: http://localhost:54321
      STRIPE_SIGNING_SECRET: ${{ secrets.STRIPE_SIGNING_SECRET }}
      STRIPE_LIVE_SECRET_KEY: ${{ secrets.STRIPE_LIVE_SECRET_KEY }}
      STRIPE_TEST_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}

  production:
    needs:
      - test
    environment: Production
    runs-on: ubuntu-latest
    name: Deploy to production
    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install

      - name: Build
        run: pnpm turbo run build --filter='./apps/api'

      - name: Deploy
        run: pnpm wrangler deploy --minify --env production --var VERSION:$(git rev-parse --short HEAD)
        working-directory: apps/api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: './apps/api/dist/src'
          ignore_missing: true